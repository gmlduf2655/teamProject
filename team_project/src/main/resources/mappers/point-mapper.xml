<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kh.team.mappers.point">
	
	<!-- 포인트 내역 추가 -->
	<insert id="insertPoint">
		insert into 
			tbl_point(pointno, point, userno, point_code)
		values
			(seq_point_pointno.nextval, #{point}, #{userno}, #{point_code})
	</insert>
	
	<!-- 포인트 코드 추가 -->
	<insert id="insertPointCode">
		insert into 
			tbl_point_code(point_code, point, point_name, point_desc)
		values
			(#{point_code}, #{point}, #{point_name}, #{point_desc, jdbcType=VARCHAR})		
	</insert>

	<!-- 포인트 목록 조회 -->
	<select id="selectPointList" resultType="PointVo">
		select * from (
			select rownum rnum, c.* from (
				select pointno, a.point, userno, point_date, b.point_code, b.point_name, b.point_desc
				from tbl_point a, tbl_point_code b
				where a.point_code = b.point_code
				<if test='searchType != null and searchType != "" and keyword != null and keyword != ""'>
					<choose>
						<when test='searchType == "p"'>
							and a.point like '%' || #{keyword} || '%'	
						</when>
						<when test='searchType == "n"'>
							and point_name like '%' || #{keyword} || '%'
						</when>
						<when test='searchType == "u"'>
							and userno= #{keyword}
						</when>
						<when test='searchType == "d"'>
							and point_date like '%' || #{keyword} || '%'
						</when>
					</choose>
				</if>
				order by point_date desc
			) c
		) where rnum between #{startRow} and #{endRow}
	</select>
	<!-- 전체 유저 포인트 내역 수 조회 -->
	<select id="getCountPointList" resultType="int">
		select count(*) from tbl_point
	</select>
	
	<!-- 아이디로 포인트 목록조회 -->
	<select id="selectPointListByUserno" resultType="PointVo">
		select * from (
			select rownum rnum, c.* from (
				select pointno, a.point, userno, point_date, b.point_code, b.point_name, b.point_desc
				from tbl_point a, tbl_point_code b
				where a.point_code = b.point_code
				and a.userno = #{userno}
				<if test='pagingDto.searchType != null and pagingDto.searchType != "" and pagingDto.keyword != null and pagingDto.keyword != ""'>
					<choose>
						<when test='pagingDto.searchType == "p"'>
							and a.point like '%' || #{pagingDto.keyword} || '%'	
						</when>
						<when test='pagingDto.searchType == "n"'>
							and point_name like '%' || #{pagingDto.keyword} || '%'
						</when>
						<when test='pagingDto.searchType == "d"'>
							and point_date like '%' || #{pagingDto.keyword} || '%'
						</when>
					</choose>
				</if>
				order by point_date desc
				) c	
		) where rnum between #{pagingDto.startRow} and #{pagingDto.endRow} 
	</select>
	
	<!-- 특정 유저 포인트 내역 수 조회 -->
	<select id="getCountPointListByUserno" resultType="int">
		select count(*) from tbl_point 
		where userno = #{userno}
	</select>
	
	
	<!-- 포인트 코드로 포인트 목록조회 -->
	<select id="selectPointListByPointCode" resultType="PointVo">
		select pointno, a.point, userno, point_date, b.point_code, b.point_name, b.point_desc
		from tbl_point a, tbl_point_code b
		where a.point_code = b.point_code
		and a.point_code = #{point_code}		
	</select>	

	<!--  포인트 번호로 포인트 내역조회 -->
	<select id="selectPointByPointno" resultType="PointVo">
		select pointno, a.point, userno, point_date, b.point_code, b.point_name, b.point_desc
		from tbl_point a, tbl_point_code b
		where a.point_code = b.point_code
		and a.pointno = #{pointno}		
	</select>
	
	<!-- 포인트 코드 목록 조회 -->
	<select id="selectPointCodeList" resultType="PointVo">
		select * from tbl_point_code 
		order by point_code asc
	</select>
	
	<!-- 포인트 내역 삭제 -->
	<delete id="deletePoint">
		delete from tbl_point
		where pointno= #{pointno}
	</delete>
	
	<!-- 포인트코드 내역 삭제 -->
	<delete id="deletePointCode">
		delete from tbl_point_code
		where point_code= #{point_code}
	</delete>
	
	<!-- 유저 포인트 수정 -->
	<update id="updatePoint">
		update tbl_user set
			point = point + #{point}
		where userno = #{userno}
	</update>
</mapper>